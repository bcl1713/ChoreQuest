# ChoreQuest Production Docker Compose
# Deploys ChoreQuest app only - requires external Supabase instance
#
# Usage: docker compose --env-file .env.production -f docker-compose.prod.yml up -d
#
# Prerequisites:
# 1. Supabase instance running (local CLI, hosted, or self-hosted Docker)
# 2. .env.production configured with Supabase credentials

services:
  # ChoreQuest Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    container_name: chorequest-app
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # Supabase Configuration (from external instance)
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}

      # Application Configuration
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - chorequest
      - supabase_default
    extra_hosts:
      - "host.docker.internal:host-gateway"

# Network Configuration
networks:
  chorequest:
    driver: bridge
    name: chorequest_network
  supabase_default:
    external: true
    name: supabase-docker_default