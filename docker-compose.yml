version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: chorequest-db
    environment:
      POSTGRES_DB: chorequest
      POSTGRES_USER: chorequest_user
      POSTGRES_PASSWORD: chorequest_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chorequest_user -d chorequest"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: chorequest-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Next.js Development Server (optional - for containerized development)
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: chorequest-web
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://chorequest_user:chorequest_password@postgres:5432/chorequest
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - dev-container

volumes:
  postgres_data:
  redis_data: